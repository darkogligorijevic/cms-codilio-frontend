'use client';

import { useState, useEffect } from 'react';
import { useForm } from 'react-hook-form';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { 
  CheckCircle, 
  ArrowRight, 
  ArrowLeft, 
  Settings, 
  User, 
  Globe,
  Mail,
  Shield,
  Loader2,
  Palette,
  Phone,
  MapPin,
  Clock,
  Building,
  Sparkles,
  Check,
  X,
  Info,
  Star,
  Lightbulb,
  Rocket,
  Target,
  Zap,
  Heart,
  Eye,
  Sun,
  Moon,
  Wifi,
  Lock,
  Database,
  Search,
  Bell,
  Image,
  Users,
  FileText,
  Share2,
  BarChart3,
  Hospital,
  School,
  Library,
  Landmark,
  Building2
} from 'lucide-react';
import { CompleteSetupDto } from '@/lib/types';
import { toast } from 'sonner';
import { settingsApi, setupApi } from '@/lib/api';
import { InstitutionType } from '@/lib/institution-templates';

const STEPS = [
  {
    id: 'welcome',
    title: '–î–æ–±—Ä–æ–¥–æ—à–ª–∏',
    subtitle: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—à–∏–º–æ –≤–∞—à CMS',
    description: '–ö—Ä–µ–∏—Ä–∞—õ–µ–º–æ –≤–∞—à –ø—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–Ω–∏ –ø–æ—Ä—Ç–∞–ª —É 5 –º–∏–Ω—É—Ç–∞',
    icon: Sparkles,
    color: 'from-violet-500 to-purple-600'
  },
  {
    id: 'institution',
    title: '–¢–∏–ø —É—Å—Ç–∞–Ω–æ–≤–µ',
    subtitle: '–ò–∑–∞–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –≤—Ä—Å—Ç—É —É—Å—Ç–∞–Ω–æ–≤–µ',
    description: '–ü—Ä–∏–ª–∞–≥–æ–¥–∏—õ–µ–º–æ –¥–∏–∑–∞—ò–Ω –ø—Ä–µ–º–∞ —Ç–∏–ø—É –≤–∞—à–µ –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏—ò–µ',
    icon: Building,
    color: 'from-indigo-500 to-blue-600'
  },
  {
    id: 'site',
    title: '–û—Å–Ω–æ–≤–µ —Å–∞—ò—Ç–∞',
    subtitle: '–ò–¥–µ–Ω—Ç–∏—Ç–µ—Ç –≤–∞—à–µ –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏—ò–µ',
    description: '–ù–∞–∑–∏–≤, –ª–æ–≥–æ –∏ –æ—Å–Ω–æ–≤–Ω–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—ò–µ',
    icon: Globe,
    color: 'from-blue-500 to-cyan-600'
  },
  {
    id: 'admin',
    title: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    subtitle: '–í–∞—à –∞–¥–º–∏–Ω –Ω–∞–ª–æ–≥',
    description: '–ö—Ä–µ–∏—Ä–∞—ö–µ —Å–∏–≥—É—Ä–Ω–æ–≥ –ø—Ä–∏—Å—Ç—É–ø–∞',
    icon: Shield,
    color: 'from-emerald-500 to-teal-600'
  },
  {
    id: 'contact',
    title: '–ö–æ–Ω—Ç–∞–∫—Ç –ø–æ–¥–∞—Ü–∏',
    subtitle: '–ö–∞–∫–æ –≤–∞—Å –º–æ–≥—É –∫–æ–Ω—Ç–∞–∫—Ç–∏—Ä–∞—Ç–∏',
    description: '–ï–º–∞–∏–ª, —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –∞–¥—Ä–µ—Å–∞',
    icon: Phone,
    color: 'from-orange-500 to-red-600'
  },
  {
    id: 'appearance',
    title: '–ò–∑–≥–ª–µ–¥',
    subtitle: '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑—É—ò—Ç–µ –¥–∏–∑–∞—ò–Ω',
    description: '–ë–æ—ò–µ, —Ñ–æ–Ω—Ç–æ–≤–∏ –∏ —Å—Ç–∏–ª',
    icon: Palette,
    color: 'from-pink-500 to-rose-600'
  },
  {
    id: 'features',
    title: '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç–∏',
    subtitle: '–®—Ç–∞ –∂–µ–ª–∏—Ç–µ –¥–∞ –æ–º–æ–≥—É—õ–∏—Ç–µ',
    description: '–ï–º–∞–∏–ª, –∫–æ–º–µ–Ω—Ç–∞—Ä–∏, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
    icon: Target,
    color: 'from-indigo-500 to-purple-600'
  },
  {
    id: 'complete',
    title: '–ì–æ—Ç–æ–≤–æ!',
    subtitle: '–í–∞—à CMS —ò–µ —Å–ø—Ä–µ–º–∞–Ω',
    description: '–ú–æ–∂–µ—Ç–µ –ø–æ—á–µ—Ç–∏ –¥–∞ –∫–æ—Ä–∏—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º',
    icon: Rocket,
    color: 'from-green-500 to-emerald-600'
  }
];

// Institution types with Serbian translations
const INSTITUTION_TYPES = [
  {
    value: InstitutionType.MUNICIPALITY,
    label: '–û–ø—à—Ç–∏–Ω–∞/–ì—Ä–∞–¥',
    description: '–õ–æ–∫–∞–ª–Ω–∞ —Å–∞–º–æ—É–ø—Ä–∞–≤–∞, –æ–ø—à—Ç–∏–Ω—Å–∫–∞/–≥—Ä–∞–¥—Å–∫–∞ —É–ø—Ä–∞–≤–∞',
    icon: Landmark,
    color: 'from-blue-600 to-indigo-600'
  },
  {
    value: InstitutionType.MUSEUM,
    label: '–ú—É–∑–µ—ò/–ì–∞–ª–µ—Ä–∏—ò–∞',
    description: '–ú—É–∑–µ—ò—Å–∫–µ –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏—ò–µ –∏ —É–º–µ—Ç–Ω–∏—á–∫–µ –≥–∞–ª–µ—Ä–∏—ò–µ',
    icon: Building2,
    color: 'from-amber-600 to-orange-600'
  },
  {
    value: InstitutionType.SCHOOL,
    label: '–®–∫–æ–ª–∞/–£–Ω–∏–≤–µ—Ä–∑–∏—Ç–µ—Ç',
    description: '–û–±—Ä–∞–∑–æ–≤–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–µ —Å–≤–∏—Ö –Ω–∏–≤–æ–∞',
    icon: School,
    color: 'from-green-600 to-emerald-600'
  },
  {
    value: InstitutionType.HOSPITAL,
    label: '–ë–æ–ª–Ω–∏—Ü–∞/–ö–ª–∏–Ω–∏–∫–∞',
    description: '–ó–¥—Ä–∞–≤—Å—Ç–≤–µ–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–µ –∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏ —Ü–µ–Ω—Ç—Ä–∏',
    icon: Hospital,
    color: 'from-red-600 to-pink-600'
  },
  {
    value: InstitutionType.LIBRARY,
    label: '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞',
    description: '–ë–∏–±–ª–∏–æ—Ç–µ–∫–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–∏ —Ü–µ–Ω—Ç—Ä–∏',
    icon: Library,
    color: 'from-purple-600 to-violet-600'
  },
  {
    value: InstitutionType.CULTURAL_CENTER,
    label: '–ö—É–ª—Ç—É—Ä–Ω–∏ —Ü–µ–Ω—Ç–∞—Ä',
    description: '–î–æ–º –∫—É–ª—Ç—É—Ä–µ, –∫—É–ª—Ç—É—Ä–Ω–æ-—É–º–µ—Ç–Ω–∏—á–∫–∞ –¥—Ä—É—à—Ç–≤–∞',
    icon: Star,
    color: 'from-teal-600 to-cyan-600'
  }
];

interface EnhancedSetupFormData extends CompleteSetupDto {
  // Institution type
  institutionType: InstitutionType;
  
  // Appearance
  primaryColor: string;
  secondaryColor: string;
  fontFamily: string;
  darkMode: boolean;
  
  // Contact details
  phone?: string;
  address?: string;
  workingHours?: string;
  
  // Features
  enableComments: boolean;
  enableNewsletter: boolean;
  enableAnalytics: boolean;
  maintenanceMode: boolean;
  
  // Social media
  facebook?: string;
  twitter?: string;
  instagram?: string;
  
  // Email settings
  smtpHost?: string;
  smtpPort?: string;
  smtpUser?: string;
}

export function SetupWizard() {
  const [currentStep, setCurrentStep] = useState(0);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [completedSteps, setCompletedSteps] = useState<number[]>([]);

  const {
    register,
    handleSubmit,
    formState: { errors },
    watch,
    trigger,
    setValue,
    getValues
  } = useForm<EnhancedSetupFormData>({
    defaultValues: {
      institutionType: InstitutionType.MUNICIPALITY,
      primaryColor: '#3B82F6',
      secondaryColor: '#10B981',
      fontFamily: 'Inter',
      darkMode: false,
      enableComments: false,
      enableNewsletter: true,
      enableAnalytics: false,
      maintenanceMode: false,
      workingHours: '–ü–æ–Ω–µ–¥–µ—ô–∞–∫ - –ü–µ—Ç–∞–∫: 08:00 - 16:00'
    }
  });

  const currentStepData = STEPS[currentStep];
  const watchedValues = watch();

  const nextStep = async () => {
    console.log('üöÄ nextStep called, currentStep:', currentStep);
    
    let fieldsToValidate: (keyof EnhancedSetupFormData)[] = [];
    
    switch (currentStep) {
      case 1: // Institution type
        fieldsToValidate = ['institutionType'];
        break;
      case 2: // Site info
        fieldsToValidate = ['siteName', 'siteTagline'];
        break;
      case 3: // Admin
        fieldsToValidate = ['adminName', 'adminEmail', 'adminPassword'];
        break;
      case 4: // Contact
        fieldsToValidate = ['contactEmail'];
        break;
      case 5: // Appearance - optional
      case 6: // Features - optional
        console.log('üìù Optional step, no validation needed');
        break;
    }

    if (fieldsToValidate.length > 0) {
      const isValid = await trigger(fieldsToValidate);
      if (!isValid) {
        return;
      }
    }

    // Mark current step as completed
    if (!completedSteps.includes(currentStep)) {
      setCompletedSteps(prev => [...prev, currentStep]);
    }

    // Stop auto-advancement at step 6
    if (currentStep >= 6) {
      return;
    }

    const nextStepIndex = currentStep + 1;
    if (nextStepIndex <= 6) {
      setCurrentStep(nextStepIndex);
    }
  };

  const prevStep = () => {
    if (currentStep > 0) {
      setCurrentStep(currentStep - 1);
    }
  };

  const goToStep = (stepIndex: number) => {
    const maxCompletedStep = Math.max(...completedSteps, -1);
    const maxAccessibleStep = maxCompletedStep + 1;
    
    const canAccess = stepIndex <= maxAccessibleStep || stepIndex <= currentStep;
    
    if (canAccess) {
      setCurrentStep(stepIndex);
    }
  };

  const onSubmit = async (data: EnhancedSetupFormData) => {
    try {
      setIsSubmitting(true);
      
      // Prepare basic setup data
      const setupData: CompleteSetupDto = {
        siteName: data.siteName,
        siteTagline: data.siteTagline,
        adminName: data.adminName,
        adminEmail: data.adminEmail,
        adminPassword: data.adminPassword,
        contactEmail: data.contactEmail,
      };
      
      // Call setup API
      const result = await setupApi.completeSetup(setupData);
      
      // Save token
      if (result.access_token) {
        localStorage.setItem('access_token', result.access_token);
      }
      
      // Update additional settings if needed
      const additionalSettings = [];
      
      if (data.primaryColor) {
        additionalSettings.push({ key: 'theme_primary_color', value: data.primaryColor });
      }
      if (data.secondaryColor) {
        additionalSettings.push({ key: 'theme_secondary_color', value: data.secondaryColor });
      }
      if (data.fontFamily) {
        additionalSettings.push({ key: 'theme_font_family', value: data.fontFamily });
      }
      if (data.phone) {
        additionalSettings.push({ key: 'contact_phone', value: data.phone });
      }
      if (data.address) {
        additionalSettings.push({ key: 'contact_address', value: data.address });
      }
      if (data.workingHours) {
        additionalSettings.push({ key: 'contact_working_hours', value: data.workingHours });
      }
      
      // Add email settings if entered
      if (data.smtpHost) {
        additionalSettings.push({ key: 'email_smtp_host', value: data.smtpHost });
      }
      if (data.smtpPort) {
        additionalSettings.push({ key: 'email_smtp_port', value: data.smtpPort });
      }
      if (data.smtpUser) {
        additionalSettings.push({ key: 'email_smtp_user', value: data.smtpUser });
      }
      
      // Add social media links
      if (data.facebook) {
        additionalSettings.push({ key: 'social_facebook', value: data.facebook });
      }
      if (data.twitter) {
        additionalSettings.push({ key: 'social_twitter', value: data.twitter });
      }
      if (data.instagram) {
        additionalSettings.push({ key: 'social_instagram', value: data.instagram });
      }
      
      // Features
      additionalSettings.push({ key: 'allow_comments', value: data.enableComments.toString() });
      additionalSettings.push({ key: 'theme_dark_mode', value: data.darkMode.toString() });
      
      // Send additional settings
      if (additionalSettings.length > 0) {
        try {
          await settingsApi.updateMultiple({ settings: additionalSettings });
        } catch (settingsError) {
          console.warn('Failed to update additional settings:', settingsError);
        }
      }
      
      // Create homepage template based on institution type
      try {
        await setupApi.createHomepageTemplate(data.institutionType);
        console.log('‚úÖ Homepage template created successfully');
      } catch (templateError) {
        console.warn('Failed to create homepage template:', templateError);
      }
      
      setCompletedSteps(prev => [...prev, currentStep]);
      setCurrentStep(7); // Go to completion step
      toast.success('–°–µ—Ç–∞–ø —ò–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤—Ä—à–µ–Ω! –î–æ–±—Ä–æ–¥–æ—à–ª–∏ —É CodilioCMS.');
      
      // Refresh setup status
      setTimeout(() => {
        window.location.reload();
      }, 2000);
      
    } catch (error: any) {
      console.error('Setup error:', error);
      toast.error(error.response?.data?.message || '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏–ª–∏–∫–æ–º —Å–µ—Ç–∞–ø-–∞');
    } finally {
      setIsSubmitting(false);
    }
  };

  const getStepIcon = (stepIndex: number) => {
    const StepIcon = STEPS[stepIndex].icon;
    const isCompleted = completedSteps.includes(stepIndex);
    const isCurrent = stepIndex === currentStep;
    const isAccessible = stepIndex <= Math.max(...completedSteps, 0) + 1;

    return (
      <div
        onClick={() => goToStep(stepIndex)}
        className={`
          relative w-12 h-12 rounded-full flex items-center justify-center transition-all duration-300 group
          ${isCompleted 
            ? 'bg-gradient-to-r from-green-500 to-emerald-600 text-white shadow-lg cursor-pointer' 
            : isCurrent 
              ? `bg-gradient-to-r ${STEPS[stepIndex].color} text-white shadow-lg scale-110 cursor-pointer` 
              : isAccessible
                ? 'bg-gray-100 text-gray-400 hover:bg-gray-200 cursor-pointer'
                : 'bg-gray-50 text-gray-300 cursor-not-allowed'
          }
        `}
      >
        {isCompleted ? (
          <Check className="w-6 h-6" />
        ) : (
          <StepIcon className={`w-6 h-6 ${isCurrent ? 'animate-pulse' : ''}`} />
        )}
        
        {/* Connecting line */}
        {stepIndex < STEPS.length - 1 && (
          <div className={`
            absolute top-1/2 left-full w-8 h-0.5 -translate-y-1/2
            ${stepIndex < Math.max(...completedSteps, 0) 
              ? 'bg-gradient-to-r from-green-500 to-emerald-600' 
              : 'bg-gray-200'
            }
          `} />
        )}
      </div>
    );
  };

  const renderStepContent = () => {
    switch (currentStep) {
      case 0: // Welcome
        return (
          <div className="text-center space-y-8">
            <div className="relative">
              <div className="mx-auto w-32 h-32 bg-gradient-to-r from-violet-500 to-purple-600 rounded-full flex items-center justify-center mb-6 shadow-2xl">
                <Sparkles className="h-16 w-16 text-white animate-pulse" />
              </div>
              <div className="absolute -top-2 -right-2 w-8 h-8 bg-yellow-400 rounded-full flex items-center justify-center animate-bounce">
                <Star className="w-4 h-4 text-yellow-800" />
              </div>
            </div>
            
            <div className="space-y-4">
              <h2 className="text-4xl font-bold bg-gradient-to-r from-violet-600 to-purple-600 bg-clip-text text-transparent">
                –î–æ–±—Ä–æ–¥–æ—à–ª–∏ —É CodilioCMS
              </h2>
              <p className="text-xl text-gray-600 max-w-2xl mx-auto leading-relaxed">
                –ö—Ä–µ–∏—Ä–∞—õ–µ–º–æ –ø—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–Ω–∏ –ø–æ—Ä—Ç–∞–ª –≤–∞—à–µ –ª–æ–∫–∞–ª–Ω–µ –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏—ò–µ —É —Å–≤–µ–≥–∞ –Ω–µ–∫–æ–ª–∏–∫–æ –∫–æ—Ä–∞–∫–∞. 
                –ü—Ä–æ—Ü–µ—Å —ò–µ –±—Ä–∑, —Å–∏–≥—É—Ä–∞–Ω –∏ –ø–æ—Ç–ø—É–Ω–æ –ø—Ä–∏–ª–∞–≥–æ—í–µ–Ω –≤–∞—à–∏–º –ø–æ—Ç—Ä–µ–±–∞–º–∞.
              </p>
            </div>

            <div className="grid grid-cols-2 md:grid-cols-4 gap-6 max-w-4xl mx-auto">
              {[
                { icon: Zap, title: '–ë—Ä–∑–∞ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—ò–∞', desc: '5 –º–∏–Ω—É—Ç–∞' },
                { icon: Shield, title: '–ü–æ—Ç–ø—É–Ω–æ —Å–∏–≥—É—Ä–Ω–æ', desc: '–°–°–õ –∑–∞—à—Ç–∏—õ–µ–Ω–æ' },
                { icon: Heart, title: '–à–µ–¥–Ω–æ—Å—Ç–∞–≤–Ω–æ', desc: '–ë–µ–∑ —Ç–µ—Ö–Ω–∏—á–∫–∏—Ö –∑–Ω–∞—ö–∞' },
                { icon: Target, title: '–ü—Ä–∏–ª–∞–≥–æ–¥—ô–∏–≤–æ', desc: '–ó–∞ —Å–≤–µ –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏—ò–µ' }
              ].map((feature, index) => (
                <div key={index} className="p-4 rounded-xl bg-white border border-gray-100 shadow-sm hover:shadow-md transition-all">
                  <feature.icon className="h-8 w-8 text-violet-600 mx-auto mb-3" />
                  <h3 className="font-semibold text-gray-900 mb-1">{feature.title}</h3>
                  <p className="text-sm text-gray-500">{feature.desc}</p>
                </div>
              ))}
            </div>

            <div className="bg-gradient-to-r from-violet-50 to-purple-50 rounded-2xl p-6 border border-violet-100">
              <div className="flex items-center justify-center space-x-2 mb-4">
                <Lightbulb className="h-5 w-5 text-violet-600" />
                <span className="text-sm font-medium text-violet-800">–ü—Ä–æ —Å–∞–≤–µ—Ç</span>
              </div>
              <p className="text-violet-700 text-sm">
                –ü—Ä–∏–ø—Ä–µ–º–∏—Ç–µ –ª–æ–≥–æ –≤–∞—à–µ –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏—ò–µ (–ü–ù–ì –∏–ª–∏ –à–ü–ì —Ñ–æ—Ä–º–∞—Ç) –∏ –æ—Å–Ω–æ–≤–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—ò–µ 
                –¥–∞ –±–∏—Å—Ç–µ —É–±—Ä–∑–∞–ª–∏ –ø—Ä–æ—Ü–µ—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—ò–µ.
              </p>
            </div>
          </div>
        );

      case 1: // Institution Type
        return (
          <div className="space-y-8">
            <div className="text-center">
              <div className="mx-auto w-20 h-20 bg-gradient-to-r from-indigo-500 to-blue-600 rounded-full flex items-center justify-center mb-6 shadow-xl">
                <Building className="h-10 w-10 text-white" />
              </div>
              <h2 className="text-2xl font-bold text-gray-900 mb-2">–ò–∑–∞–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–∞—à–µ —É—Å—Ç–∞–Ω–æ–≤–µ</h2>
              <p className="text-gray-600">–û–≤–æ —õ–µ –ø–æ–º–æ—õ–∏ –¥–∞ –ø—Ä–∏–ª–∞–≥–æ–¥–∏–º–æ –¥–∏–∑–∞—ò–Ω –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ –∑–∞ –≤–∞—à—É –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏—ò—É</p>
            </div>

            <div className="grid gap-4 max-w-4xl mx-auto">
              {INSTITUTION_TYPES.map((type) => (
                <label key={type.value} className="cursor-pointer">
                  <input
                    type="radio"
                    value={type.value}
                    {...register('institutionType', { required: '–¢–∏–ø —É—Å—Ç–∞–Ω–æ–≤–µ —ò–µ –æ–±–∞–≤–µ–∑–∞–Ω' })}
                    className="sr-only"
                  />
                  <div className={`
                    group p-6 rounded-xl border-2 transition-all duration-300 hover:shadow-lg
                    ${watchedValues.institutionType === type.value 
                      ? `border-indigo-500 bg-gradient-to-r ${type.color} bg-opacity-5 shadow-md scale-[1.02]` 
                      : 'border-gray-200 hover:border-gray-300 bg-white'
                    }
                  `}>
                    <div className="flex items-start space-x-4">
                      <div className={`
                        p-3 rounded-lg transition-colors
                        ${watchedValues.institutionType === type.value 
                          ? `bg-gradient-to-r ${type.color} text-white shadow-lg` 
                          : 'bg-gray-100 text-gray-500 group-hover:bg-gray-200'
                        }
                      `}>
                        <type.icon className="w-6 h-6" />
                      </div>
                      <div className="flex-1">
                        <h3 className={`
                          text-lg font-semibold mb-2 transition-colors
                          ${watchedValues.institutionType === type.value ? 'text-indigo-900' : 'text-gray-900'}
                        `}>
                          {type.label}
                        </h3>
                        <p className={`
                          text-sm transition-colors
                          ${watchedValues.institutionType === type.value ? 'text-indigo-700' : 'text-gray-600'}
                        `}>
                          {type.description}
                        </p>
                      </div>
                      {watchedValues.institutionType === type.value && (
                        <div className="p-1 bg-indigo-500 rounded-full">
                          <Check className="w-4 h-4 text-white" />
                        </div>
                      )}
                    </div>
                  </div>
                </label>
              ))}
            </div>

            {errors.institutionType && (
              <p className="text-red-500 text-sm flex items-center justify-center space-x-1">
                <X className="w-4 h-4" />
                <span>{errors.institutionType.message}</span>
              </p>
            )}

            <div className="bg-indigo-50 border border-indigo-200 rounded-xl p-4 max-w-2xl mx-auto">
              <div className="flex space-x-3">
                <Info className="w-5 h-5 text-indigo-600 flex-shrink-0 mt-0.5" />
                <div>
                  <h4 className="text-sm font-medium text-indigo-900 mb-1">üí° –ü—Ä–∏–ª–∞–≥–æ—í–∞–≤–∞—ö–µ</h4>
                  <p className="text-sm text-indigo-700">
                    –ù–∞ –æ—Å–Ω–æ–≤—É –≤–∞—à–µ–≥ –∏–∑–±–æ—Ä–∞, —Å–∏—Å—Ç–µ–º —õ–µ –∞—É—Ç–æ–º–∞—Ç—Å–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Å–∞—Ç–∏ –±–æ—ò–µ, —Å–µ–∫—Ü–∏—ò–µ –ø–æ—á–µ—Ç–Ω–µ —Å—Ç—Ä–∞–Ω–∏—Ü–µ 
                    –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–µ –∑–∞ –≤–∞—à—É –≤—Ä—Å—Ç—É —É—Å—Ç–∞–Ω–æ–≤–µ.
                  </p>
                </div>
              </div>
            </div>
          </div>
        );

      case 2: // Site Information
        return (
          <div className="space-y-8">
            <div className="text-center">
              <div className="mx-auto w-20 h-20 bg-gradient-to-r from-blue-500 to-cyan-600 rounded-full flex items-center justify-center mb-6 shadow-xl">
                <Globe className="h-10 w-10 text-white" />
              </div>
              <h2 className="text-2xl font-bold text-gray-900 mb-2">–ò–¥–µ–Ω—Ç–∏—Ç–µ—Ç –≤–∞—à–µ –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏—ò–µ</h2>
              <p className="text-gray-600">–û—Å–Ω–æ–≤–Ω–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—ò–µ –∫–æ—ò–µ —õ–µ —Å–µ –ø—Ä–∏–∫–∞–∑–∏–≤–∞—Ç–∏ –Ω–∞ –≤–∞—à–µ–º –ø–æ—Ä—Ç–∞–ª—É</p>
            </div>

            <div className="grid gap-6 max-w-2xl mx-auto">
              <div className="space-y-2">
                <Label htmlFor="siteName" className="flex items-center space-x-2">
                  <Building className="w-4 h-4 text-blue-600" />
                  <span>–ù–∞–∑–∏–≤ –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏—ò–µ *</span>
                </Label>
                <Input
                  id="siteName"
                  {...register('siteName', { 
                    required: '–ù–∞–∑–∏–≤ —ò–µ –æ–±–∞–≤–µ–∑–∞–Ω',
                    maxLength: { value: 100, message: '–ú–∞–∫—Å–∏–º–∞–ª–Ω–æ 100 –∫–∞—Ä–∞–∫—Ç–µ—Ä–∞' }
                  })}
                  placeholder="–Ω–ø—Ä. –û–ø—à—Ç–∏–Ω–∞ –ú–ª–∞–¥–µ–Ω–æ–≤–∞—Ü"
                  className={`h-12 ${errors.siteName ? 'border-red-500 focus:border-red-500' : 'focus:border-blue-500'}`}
                />
                {errors.siteName && (
                  <p className="text-red-500 text-sm flex items-center space-x-1">
                    <X className="w-4 h-4" />
                    <span>{errors.siteName.message}</span>
                  </p>
                )}
              </div>

              <div className="space-y-2">
                <Label htmlFor="siteTagline" className="flex items-center space-x-2">
                  <Sparkles className="w-4 h-4 text-blue-600" />
                  <span>–°–ª–æ–≥–∞–Ω/–û–ø–∏—Å *</span>
                </Label>
                <Textarea
                  id="siteTagline"
                  {...register('siteTagline', { 
                    required: '–û–ø–∏—Å —ò–µ –æ–±–∞–≤–µ–∑–∞–Ω',
                    maxLength: { value: 200, message: '–ú–∞–∫—Å–∏–º–∞–ª–Ω–æ 200 –∫–∞—Ä–∞–∫—Ç–µ—Ä–∞' }
                  })}
                  placeholder="–Ω–ø—Ä. –¢—Ä–∞–Ω—Å–ø–∞—Ä–µ–Ω—Ç–Ω–æ—Å—Ç –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç —É —Å–ª—É–∂–±–∏ –≥—Ä–∞—í–∞–Ω–∞"
                  rows={3}
                  className={errors.siteTagline ? 'border-red-500 focus:border-red-500' : 'focus:border-blue-500'}
                />
                {errors.siteTagline && (
                  <p className="text-red-500 text-sm flex items-center space-x-1">
                    <X className="w-4 h-4" />
                    <span>{errors.siteTagline.message}</span>
                  </p>
                )}
              </div>

              <div className="bg-blue-50 border border-blue-200 rounded-xl p-4">
                <div className="flex space-x-3">
                  <Info className="w-5 h-5 text-blue-600 flex-shrink-0 mt-0.5" />
                  <div>
                    <h4 className="text-sm font-medium text-blue-900 mb-1">üí° –°–∞–≤–µ—Ç–∏ –∑–∞ –¥–æ–±–∞—Ä –Ω–∞–∑–∏–≤</h4>
                    <ul className="text-sm text-blue-700 space-y-1">
                      <li>‚Ä¢ –ö–æ—Ä–∏—Å—Ç–∏—Ç–µ –∑–≤–∞–Ω–∏—á–Ω–∏ –Ω–∞–∑–∏–≤ –≤–∞—à–µ –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏—ò–µ</li>
                      <li>‚Ä¢ –ö—Ä–∞—Ç–∫–æ –∏ —ò–∞—Å–Ω–æ - –ª–∞–∫—à–µ –∑–∞ –ø–∞–º—õ–µ—ö–µ</li>
                      <li>‚Ä¢ –ò–∑–±–µ–≥–∞–≤–∞—ò—Ç–µ —Å–∫—Ä–∞—õ–µ–Ω–∏—Ü–µ –∫–æ—ò–µ –Ω–∏—Å—É –æ–ø—à—Ç–µ –ø–æ–∑–Ω–∞—Ç–µ</li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          </div>
        );

      case 3: // Admin User
        return (
          <div className="space-y-8">
            <div className="text-center">
              <div className="mx-auto w-20 h-20 bg-gradient-to-r from-emerald-500 to-teal-600 rounded-full flex items-center justify-center mb-6 shadow-xl">
                <Shield className="h-10 w-10 text-white" />
              </div>
              <h2 className="text-2xl font-bold text-gray-900 mb-2">–í–∞—à –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞–ª–æ–≥</h2>
              <p className="text-gray-600">–ö—Ä–µ–∏—Ä–∞—õ–µ–º–æ —Å–∏–≥—É—Ä–∞–Ω –ø—Ä–∏—Å—Ç—É–ø –∑–∞ —É–ø—Ä–∞–≤—ô–∞—ö–µ –ø–æ—Ä—Ç–∞–ª–æ–º</p>
            </div>

            <div className="grid gap-6 max-w-2xl mx-auto">
              <div className="space-y-2">
                <Label htmlFor="adminName" className="flex items-center space-x-2">
                  <User className="w-4 h-4 text-emerald-600" />
                  <span>–ü—É–Ω–æ –∏–º–µ *</span>
                </Label>
                <Input
                  id="adminName"
                  {...register('adminName', { 
                    required: '–ò–º–µ —ò–µ –æ–±–∞–≤–µ–∑–Ω–æ',
                    maxLength: { value: 100, message: '–ú–∞–∫—Å–∏–º–∞–ª–Ω–æ 100 –∫–∞—Ä–∞–∫—Ç–µ—Ä–∞' }
                  })}
                  placeholder="–ú–∞—Ä–∫–æ –ü–µ—Ç—Ä–æ–≤–∏—õ"
                  className={`h-12 ${errors.adminName ? 'border-red-500' : 'focus:border-emerald-500'}`}
                />
                {errors.adminName && (
                  <p className="text-red-500 text-sm flex items-center space-x-1">
                    <X className="w-4 h-4" />
                    <span>{errors.adminName.message}</span>
                  </p>
                )}
              </div>

              <div className="space-y-2">
                <Label htmlFor="adminEmail" className="flex items-center space-x-2">
                  <Mail className="w-4 h-4 text-emerald-600" />
                  <span>–ï–º–∞–∏–ª –∞–¥—Ä–µ—Å–∞ *</span>
                </Label>
                <Input
                  id="adminEmail"
                  type="email"
                  {...register('adminEmail', { 
                    required: '–ï–º–∞–∏–ª —ò–µ –æ–±–∞–≤–µ–∑–∞–Ω',
                    pattern: {
                      value: /^[^\s@]+@[^\s@]+\.[^\s@]+$/,
                      message: '–ù–µ–∏—Å–ø—Ä–∞–≤–Ω–∞ –µ–º–∞–∏–ª –∞–¥—Ä–µ—Å–∞'
                    }
                  })}
                  placeholder="admin@mojainstitucija.rs"
                  className={`h-12 ${errors.adminEmail ? 'border-red-500' : 'focus:border-emerald-500'}`}
                />
                {errors.adminEmail && (
                  <p className="text-red-500 text-sm flex items-center space-x-1">
                    <X className="w-4 h-4" />
                    <span>{errors.adminEmail.message}</span>
                  </p>
                )}
              </div>

              <div className="space-y-2">
                <Label htmlFor="adminPassword" className="flex items-center space-x-2">
                  <Lock className="w-4 h-4 text-emerald-600" />
                  <span>–õ–æ–∑–∏–Ω–∫–∞ *</span>
                </Label>
                <Input
                  id="adminPassword"
                  type="password"
                  {...register('adminPassword', { 
                    required: '–õ–æ–∑–∏–Ω–∫–∞ —ò–µ –æ–±–∞–≤–µ–∑–Ω–∞',
                    minLength: { value: 6, message: '–ú–∏–Ω–∏–º—É–º 6 –∫–∞—Ä–∞–∫—Ç–µ—Ä–∞' },
                    maxLength: { value: 50, message: '–ú–∞–∫—Å–∏–º–∞–ª–Ω–æ 50 –∫–∞—Ä–∞–∫—Ç–µ—Ä–∞' }
                  })}
                  placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                  className={`h-12 ${errors.adminPassword ? 'border-red-500' : 'focus:border-emerald-500'}`}
                />
                {errors.adminPassword && (
                  <p className="text-red-500 text-sm flex items-center space-x-1">
                    <X className="w-4 h-4" />
                    <span>{errors.adminPassword.message}</span>
                  </p>
                )}
                <p className="text-xs text-gray-500 mt-1">
                  –ö–æ—Ä–∏—Å—Ç–∏—õ–µ—Ç–µ –æ–≤–µ –ø–æ–¥–∞—Ç–∫–µ –∑–∞ –ø—Ä–∏—ò–∞–≤—ô–∏–≤–∞—ö–µ —É –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª
                </p>
              </div>

              <div className="bg-emerald-50 border border-emerald-200 rounded-xl p-4">
                <div className="flex space-x-3">
                  <Shield className="w-5 h-5 text-emerald-600 flex-shrink-0 mt-0.5" />
                  <div>
                    <h4 className="text-sm font-medium text-emerald-900 mb-1">üîí –°–∏–≥—É—Ä–Ω–æ—Å—Ç –Ω–∞ –ø—Ä–≤–æ–º –º–µ—Å—Ç—É</h4>
                    <ul className="text-sm text-emerald-700 space-y-1">
                      <li>‚Ä¢ –ö–æ—Ä–∏—Å—Ç–∏—Ç–µ —ò–∞–∫—É –ª–æ–∑–∏–Ω–∫—É (–Ω–∞—ò–º–∞—ö–µ 8 –∫–∞—Ä–∞–∫—Ç–µ—Ä–∞)</li>
                      <li>‚Ä¢ –ö–æ–º–±–∏–Ω—É—ò—Ç–µ —Å–ª–æ–≤–∞, –±—Ä–æ—ò–µ–≤–µ –∏ —Å–∏–º–±–æ–ª–µ</li>
                      <li>‚Ä¢ –ù–∏–∫–∞–¥ –Ω–µ –¥–µ–ª–∏—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–Ω–µ –ø–æ–¥–∞—Ç–∫–µ</li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          </div>
        );

      case 4: // Contact
        return (
          <div className="space-y-8">
            <div className="text-center">
              <div className="mx-auto w-20 h-20 bg-gradient-to-r from-orange-500 to-red-600 rounded-full flex items-center justify-center mb-6 shadow-xl">
                <Phone className="h-10 w-10 text-white" />
              </div>
              <h2 className="text-2xl font-bold text-gray-900 mb-2">–ö–æ–Ω—Ç–∞–∫—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—ò–µ</h2>
              <p className="text-gray-600">–ö–∞–∫–æ –≤–∞—Å –≥—Ä–∞—í–∞–Ω–∏ –º–æ–≥—É –∫–æ–Ω—Ç–∞–∫—Ç–∏—Ä–∞—Ç–∏</p>
            </div>

            <div className="grid gap-6 max-w-2xl mx-auto">
              <div className="space-y-2">
                <Label htmlFor="contactEmail" className="flex items-center space-x-2">
                  <Mail className="w-4 h-4 text-orange-600" />
                  <span>–ì–ª–∞–≤–Ω–∏ –µ–º–∞–∏–ª *</span>
                </Label>
                <Input
                  id="contactEmail"
                  type="email"
                  {...register('contactEmail', { 
                    required: '–ï–º–∞–∏–ª —ò–µ –æ–±–∞–≤–µ–∑–∞–Ω',
                    pattern: {
                      value: /^[^\s@]+@[^\s@]+\.[^\s@]+$/,
                      message: '–ù–µ–∏—Å–ø—Ä–∞–≤–Ω–∞ –µ–º–∞–∏–ª –∞–¥—Ä–µ—Å–∞'
                    }
                  })}
                  placeholder="info@mojainstitucija.rs"
                  className={`h-12 ${errors.contactEmail ? 'border-red-500' : 'focus:border-orange-500'}`}
                />
                {errors.contactEmail && (
                  <p className="text-red-500 text-sm flex items-center space-x-1">
                    <X className="w-4 h-4" />
                    <span>{errors.contactEmail.message}</span>
                  </p>
                )}
              </div>

              <div className="space-y-2">
                <Label htmlFor="phone" className="flex items-center space-x-2">
                  <Phone className="w-4 h-4 text-orange-600" />
                  <span>–¢–µ–ª–µ—Ñ–æ–Ω</span>
                </Label>
                <Input
                  id="phone"
                  {...register('phone')}
                  placeholder="+381 11 123 4567"
                  className="h-12 focus:border-orange-500"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="address" className="flex items-center space-x-2">
                  <MapPin className="w-4 h-4 text-orange-600" />
                  <span>–ê–¥—Ä–µ—Å–∞</span>
                </Label>
                <Textarea
                  id="address"
                  {...register('address')}
                  placeholder="–¢—Ä–≥ –†–µ–ø—É–±–ª–∏–∫–µ 1, 11000 –ë–µ–æ–≥—Ä–∞–¥"
                  rows={2}
                  className="focus:border-orange-500"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="workingHours" className="flex items-center space-x-2">
                  <Clock className="w-4 h-4 text-orange-600" />
                  <span>–†–∞–¥–Ω–æ –≤—Ä–µ–º–µ</span>
                </Label>
                <Input
                  id="workingHours"
                  {...register('workingHours')}
                  placeholder="–ü–æ–Ω–µ–¥–µ—ô–∞–∫ - –ü–µ—Ç–∞–∫: 08:00 - 16:00"
                  className="h-12 focus:border-orange-500"
                />
              </div>

              <div className="bg-orange-50 border border-orange-200 rounded-xl p-4">
                <div className="flex space-x-3">
                  <Bell className="w-5 h-5 text-orange-600 flex-shrink-0 mt-0.5" />
                  <div>
                    <h4 className="text-sm font-medium text-orange-900 mb-1">üìß –ù–∞–ø–æ–º–µ–Ω–∞</h4>
                    <p className="text-sm text-orange-700">
                      –ù–∞ –≥–ª–∞–≤–Ω–∏ –µ–º–∞–∏–ª —õ–µ —Å—Ç–∏–∑–∞—Ç–∏ —Å–≤–µ –ø–æ—Ä—É–∫–µ —Å–∞ –∫–æ–Ω—Ç–∞–∫—Ç —Ñ–æ—Ä–º–µ. 
                      –û—Å—Ç–∞–ª–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—ò–µ —Å—É –æ–ø—Ü–∏–æ–Ω–µ –∏ –º–æ–∂–µ—Ç–µ –∏—Ö –¥–æ–¥–∞—Ç–∏ –∫–∞—Å–Ω–∏—ò–µ.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        );

      case 5: // Appearance
        return (
          <div className="space-y-8">
            <div className="text-center">
              <div className="mx-auto w-20 h-20 bg-gradient-to-r from-pink-500 to-rose-600 rounded-full flex items-center justify-center mb-6 shadow-xl">
                <Palette className="h-10 w-10 text-white" />
              </div>
              <h2 className="text-2xl font-bold text-gray-900 mb-2">–í–∏–∑—É–µ–ª–Ω–∏ –∏–¥–µ–Ω—Ç–∏—Ç–µ—Ç</h2>
              <p className="text-gray-600">–ü—Ä–∏–ª–∞–≥–æ–¥–∏—Ç–µ –±–æ—ò–µ –∏ —Å—Ç–∏–ª –ø–æ—Ä—Ç–∞–ª–∞</p>
            </div>

            <div className="grid gap-8 max-w-2xl mx-auto">
              {/* Color Scheme */}
              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-gray-900 flex items-center space-x-2">
                  <Palette className="w-5 h-5 text-pink-600" />
                  <span>–ü–∞–ª–µ—Ç–∞ –±–æ—ò–∞</span>
                </h3>
                
                <div className="grid grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <Label htmlFor="primaryColor">–ü—Ä–∏–º–∞—Ä–Ω–∞ –±–æ—ò–∞</Label>
                    <div className="flex items-center space-x-3">
                      <input
                        id="primaryColor"
                        type="color"
                        {...register('primaryColor')}
                        className="w-12 h-12 rounded-lg border-2 border-gray-200 cursor-pointer"
                      />
                      <Input
                        value={watchedValues.primaryColor}
                        onChange={(e) => setValue('primaryColor', e.target.value)}
                        placeholder="#3B82F6"
                        className="flex-1 h-12"
                      />
                    </div>
                  </div>
                  
                  <div className="space-y-2">
                    <Label htmlFor="secondaryColor">–°–µ–∫—É–Ω–¥–∞—Ä–Ω–∞ –±–æ—ò–∞</Label>
                    <div className="flex items-center space-x-3">
                      <input
                        id="secondaryColor"
                        type="color"
                        {...register('secondaryColor')}
                        className="w-12 h-12 rounded-lg border-2 border-gray-200 cursor-pointer"
                      />
                      <Input
                        value={watchedValues.secondaryColor}
                        onChange={(e) => setValue('secondaryColor', e.target.value)}
                        placeholder="#10B981"
                        className="flex-1 h-12"
                      />
                    </div>
                  </div>
                </div>

                {/* Color Preview */}
                <div className="bg-gray-50 rounded-xl p-4 border-2 border-dashed border-gray-200">
                  <h4 className="text-sm font-medium mb-3">–ü—Ä–µ–≥–ª–µ–¥ –±–æ—ò–∞</h4>
                  <div className="flex space-x-4">
                    <div className="flex items-center space-x-2">
                      <div 
                        className="w-8 h-8 rounded-lg border"
                        style={{ backgroundColor: watchedValues.primaryColor }}
                      />
                      <span className="text-sm">–ü—Ä–∏–º–∞—Ä–Ω–∞</span>
                    </div>
                    <div className="flex items-center space-x-2">
                      <div 
                        className="w-8 h-8 rounded-lg border"
                        style={{ backgroundColor: watchedValues.secondaryColor }}
                      />
                      <span className="text-sm">–°–µ–∫—É–Ω–¥–∞—Ä–Ω–∞</span>
                    </div>
                  </div>
                </div>
              </div>

              {/* Font Selection */}
              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-gray-900 flex items-center space-x-2">
                  <span className="text-xl">Aa</span>
                  <span>–¢–∏–ø–æ–≥—Ä–∞—Ñ–∏—ò–∞</span>
                </h3>
                
                <div className="grid grid-cols-2 gap-3">
                  {['Inter', 'Roboto', 'Open Sans', 'Lato'].map((font) => (
                    <label key={font} className="cursor-pointer">
                      <input
                        type="radio"
                        value={font}
                        {...register('fontFamily')}
                        className="sr-only"
                      />
                      <div className={`
                        p-4 rounded-lg border-2 transition-all text-center
                        ${watchedValues.fontFamily === font 
                          ? 'border-pink-500 bg-pink-50' 
                          : 'border-gray-200 hover:border-gray-300'
                        }
                      `}>
                        <span style={{ fontFamily: font }} className="text-lg font-medium">
                          {font}
                        </span>
                        <p style={{ fontFamily: font }} className="text-sm text-gray-500 mt-1">
                          –ë—Ä–∑–æ —Å–º–µ—í–µ –ª–∏—Å–∏—Ü–µ —Å–∫–æ—á–µ
                        </p>
                      </div>
                    </label>
                  ))}
                </div>
              </div>

              {/* Dark Mode Toggle */}
              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-gray-900 flex items-center space-x-2">
                  <div className="flex items-center space-x-1">
                    <Sun className="w-4 h-4" />
                    <Moon className="w-4 h-4" />
                  </div>
                  <span>–¢–µ–º–∞</span>
                </h3>
                
                <label className="flex items-center justify-between p-4 rounded-lg border-2 border-gray-200 cursor-pointer hover:border-gray-300">
                  <div className="flex items-center space-x-3">
                    <div className="p-2 bg-gray-900 rounded-lg">
                      <Moon className="w-5 h-5 text-white" />
                    </div>
                    <div>
                      <h4 className="font-medium">–û–º–æ–≥—É—õ–∏ —Ç–∞–º–Ω—É —Ç–µ–º—É</h4>
                      <p className="text-sm text-gray-500">–ö–æ—Ä–∏—Å–Ω–∏—Ü–∏ –º–æ–≥—É –±–∏—Ä–∞—Ç–∏ –∏–∑–º–µ—í—É —Å–≤–µ—Ç–ª–µ –∏ —Ç–∞–º–Ω–µ —Ç–µ–º–µ</p>
                    </div>
                  </div>
                  <input
                    type="checkbox"
                    {...register('darkMode')}
                    className="sr-only"
                  />
                  <div className={`
                    w-12 h-6 rounded-full transition-colors relative
                    ${watchedValues.darkMode ? 'bg-pink-500' : 'bg-gray-200'}
                  `}>
                    <div className={`
                      w-5 h-5 bg-white rounded-full shadow-sm transition-transform absolute top-0.5
                      ${watchedValues.darkMode ? 'translate-x-6' : 'translate-x-0.5'}
                    `} />
                  </div>
                </label>
              </div>
            </div>
          </div>
        );

      case 6: // Features
        return (
          <div className="space-y-8">
            <div className="text-center">
              <div className="mx-auto w-20 h-20 bg-gradient-to-r from-indigo-500 to-purple-600 rounded-full flex items-center justify-center mb-6 shadow-xl">
                <Target className="h-10 w-10 text-white" />
              </div>
              <h2 className="text-2xl font-bold text-gray-900 mb-2">–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç–∏</h2>
              <p className="text-gray-600">–ò–∑–∞–±–µ—Ä–∏—Ç–µ —à—Ç–∞ –∂–µ–ª–∏—Ç–µ –¥–∞ –æ–º–æ–≥—É—õ–∏—Ç–µ –Ω–∞ –ø–æ—Ä—Ç–∞–ª—É</p>
            </div>

            <div className="grid gap-6 max-w-2xl mx-auto">
              {/* Core Features */}
              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-gray-900 flex items-center space-x-2">
                  <Zap className="w-5 h-5 text-indigo-600" />
                  <span>–û—Å–Ω–æ–≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏—ò–µ</span>
                </h3>
                
                <div className="space-y-3">
                  {[
                    {
                      key: 'enableNewsletter' as keyof EnhancedSetupFormData,
                      icon: Mail,
                      title: '–ä—É–∑–ª–µ—Ç–µ—Ä —Å–∏—Å—Ç–µ–º',
                      description: '–û–º–æ–≥—É—õ–∏—Ç–µ –≥—Ä–∞—í–∞–Ω–∏–º–∞ –¥–∞ —Å–µ –ø—Ä–µ—Ç–ø–ª–∞—Ç–µ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏',
                      recommended: true
                    },
                    {
                      key: 'enableComments' as keyof EnhancedSetupFormData,
                      icon: Bell,
                      title: '–ö–æ–º–µ–Ω—Ç–∞—Ä–∏ –Ω–∞ –æ–±—ò–∞–≤–µ',
                      description: '–î–æ–∑–≤–æ–ª–∏—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏—Å–∞—ö–µ –æ–±—ò–∞–≤–∞',
                      recommended: false
                    },
                    {
                      key: 'enableAnalytics' as keyof EnhancedSetupFormData,
                      icon: BarChart3,
                      title: '–ì—É–≥–ª –ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
                      description: '–ü—Ä–∞—Ç–∏—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –ø–æ—Å–µ—Ç–∞ —Å–∞—ò—Ç–∞',
                      recommended: true
                    }
                  ].map((feature) => (
                    <label key={feature.key} className="flex items-center justify-between p-4 rounded-lg border-2 border-gray-200 cursor-pointer hover:border-gray-300 transition-all">
                      <div className="flex items-center space-x-3">
                        <div className={`p-2 rounded-lg ${
                          watchedValues[feature.key] ? 'bg-indigo-100' : 'bg-gray-100'
                        }`}>
                          <feature.icon className={`w-5 h-5 ${
                            watchedValues[feature.key] ? 'text-indigo-600' : 'text-gray-500'
                          }`} />
                        </div>
                        <div>
                          <div className="flex items-center space-x-2">
                            <h4 className="font-medium">{feature.title}</h4>
                            {feature.recommended && (
                              <span className="text-xs bg-green-100 text-green-800 px-2 py-0.5 rounded-full">
                                –ü—Ä–µ–ø–æ—Ä—É—á–µ–Ω–æ
                              </span>
                            )}
                          </div>
                          <p className="text-sm text-gray-500">{feature.description}</p>
                        </div>
                      </div>
                      <input
                        type="checkbox"
                        {...register(feature.key)}
                        className="sr-only"
                      />
                      <div className={`
                        w-12 h-6 rounded-full transition-colors relative
                        ${watchedValues[feature.key] ? 'bg-indigo-500' : 'bg-gray-200'}
                      `}>
                        <div className={`
                          w-5 h-5 bg-white rounded-full shadow-sm transition-transform absolute top-0.5
                          ${watchedValues[feature.key] ? 'translate-x-6' : 'translate-x-0.5'}
                        `} />
                      </div>
                    </label>
                  ))}
                </div>
              </div>

              {/* Social Media */}
              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-gray-900 flex items-center space-x-2">
                  <Share2 className="w-5 h-5 text-indigo-600" />
                  <span>–î—Ä—É—à—Ç–≤–µ–Ω–µ –º—Ä–µ–∂–µ</span>
                </h3>
                
                <div className="grid gap-3">
                  <Input
                    {...register('facebook')}
                    placeholder="–§–µ—ò—Å–±—É–∫ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–æ–ø—Ü–∏–æ–Ω–æ)"
                    className="h-12 focus:border-indigo-500"
                  />
                  <Input
                    {...register('twitter')}
                    placeholder="–¢–≤–∏—Ç–µ—Ä/X –ø—Ä–æ—Ñ–∏–ª (–æ–ø—Ü–∏–æ–Ω–æ)"
                    className="h-12 focus:border-indigo-500"
                  />
                  <Input
                    {...register('instagram')}
                    placeholder="–ò–Ω—Å—Ç–∞–≥—Ä–∞–º –ø—Ä–æ—Ñ–∏–ª (–æ–ø—Ü–∏–æ–Ω–æ)"
                    className="h-12 focus:border-indigo-500"
                  />
                </div>
              </div>

              {/* Email Configuration */}
              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-gray-900 flex items-center space-x-2">
                  <Wifi className="w-5 h-5 text-indigo-600" />
                  <span>–ï–º–∞–∏–ª –ø–æ–¥–µ—à–∞–≤–∞—ö–∞ (–æ–ø—Ü–∏–æ–Ω–æ)</span>
                </h3>
                
                <div className="grid gap-3">
                  <Input
                    {...register('smtpHost')}
                    placeholder="–°–ú–¢–ü —Ö–æ—Å—Ç (–Ω–ø—Ä. smtp.gmail.com)"
                    className="h-12 focus:border-indigo-500"
                  />
                  <div className="grid grid-cols-2 gap-3">
                    <Input
                      {...register('smtpPort')}
                      placeholder="–ü–æ—Ä—Ç (587)"
                      className="h-12 focus:border-indigo-500"
                    />
                    <Input
                      {...register('smtpUser')}
                      placeholder="–ö–æ—Ä–∏—Å–Ω–∏—á–∫–æ –∏–º–µ"
                      className="h-12 focus:border-indigo-500"
                    />
                  </div>
                </div>

                <div className="bg-indigo-50 border border-indigo-200 rounded-xl p-4">
                  <div className="flex space-x-3">
                    <Info className="w-5 h-5 text-indigo-600 flex-shrink-0 mt-0.5" />
                    <div>
                      <h4 className="text-sm font-medium text-indigo-900 mb-1">üìß –ï–º–∞–∏–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—ò–∞</h4>
                      <p className="text-sm text-indigo-700">
                        –û–≤–∞ –ø–æ–¥–µ—à–∞–≤–∞—ö–∞ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–º–µ–Ω–∏—Ç–∏ –∫–∞—Å–Ω–∏—ò–µ —É –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—É. 
                        –ë–µ–∑ —ö–∏—Ö —õ–µ —Å–∏—Å—Ç–µ–º –∫–æ—Ä–∏—Å—Ç–∏—Ç–∏ –æ—Å–Ω–æ–≤–Ω—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—ò—É.
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        );

      case 7: // Complete
        return (
          <div className="text-center space-y-8">
            <div className="relative">
              <div className="mx-auto w-32 h-32 bg-gradient-to-r from-green-500 to-emerald-600 rounded-full flex items-center justify-center mb-6 shadow-2xl">
                <Rocket className="h-16 w-16 text-white animate-bounce" />
              </div>
              <div className="absolute -top-2 -right-2 w-12 h-12 bg-yellow-400 rounded-full flex items-center justify-center animate-spin">
                <Sparkles className="w-6 h-6 text-yellow-800" />
              </div>
            </div>
            
            <div className="space-y-4">
              <h2 className="text-4xl font-bold bg-gradient-to-r from-green-600 to-emerald-600 bg-clip-text text-transparent">
                –ß–µ—Å—Ç–∏—Ç–∞–º–æ! üéâ
              </h2>
              <p className="text-xl text-gray-600 max-w-2xl mx-auto leading-relaxed">
                –í–∞—à CodilioCMS –ø–æ—Ä—Ç–∞–ª —ò–µ —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Å–∞–Ω –∏ —Å–ø—Ä–µ–º–∞–Ω –∑–∞ –∫–æ—Ä–∏—à—õ–µ—ö–µ. 
                –ê—É—Ç–æ–º–∞—Ç—Å–∫–∏ —Å—Ç–µ –ø—Ä–∏—ò–∞–≤—ô–µ–Ω–∏ –∫–∞–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-4xl mx-auto">
              <Card className="p-6 border-green-200 bg-green-50">
                <CardHeader className="p-0 mb-4">
                  <div className="w-12 h-12 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-3">
                    <Lightbulb className="w-6 h-6 text-white" />
                  </div>
                  <CardTitle className="text-center text-green-900">–°–ª–µ–¥–µ—õ–∏ –∫–æ—Ä–∞—Ü–∏</CardTitle>
                </CardHeader>
                <CardContent className="p-0">
                  <ul className="text-sm text-green-800 space-y-2">
                    <li className="flex items-center space-x-2">
                      <Check className="w-4 h-4 text-green-600" />
                      <span>–î–æ–¥–∞—ò—Ç–µ –ø—Ä–≤–µ –æ–±—ò–∞–≤–µ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü–µ</span>
                    </li>
                    <li className="flex items-center space-x-2">
                      <Check className="w-4 h-4 text-green-600" />
                      <span>–ü–æ—Å—Ç–∞–≤–∏—Ç–µ –ª–æ–≥–æ –∏ —Ñ–∞–≤–∏–∫–æ–Ω</span>
                    </li>
                    <li className="flex items-center space-x-2">
                      <Check className="w-4 h-4 text-green-600" />
                      <span>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—à–∏—Ç–µ –¥–æ–¥–∞—Ç–Ω–∞ –ø–æ–¥–µ—à–∞–≤–∞—ö–∞</span>
                    </li>
                    <li className="flex items-center space-x-2">
                      <Check className="w-4 h-4 text-green-600" />
                      <span>–ü–æ–∑–æ–≤–∏—Ç–µ —Ç–∏–º –¥–∞ –∫–æ—Ä–∏—Å—Ç–∏ CMS</span>
                    </li>
                  </ul>
                </CardContent>
              </Card>

              <Card className="p-6 border-blue-200 bg-blue-50">
                <CardHeader className="p-0 mb-4">
                  <div className="w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center mx-auto mb-3">
                    <Heart className="w-6 h-6 text-white" />
                  </div>
                  <CardTitle className="text-center text-blue-900">–ü–æ–¥—Ä—à–∫–∞ –∏ —Ä–µ—Å—É—Ä—Å–∏</CardTitle>
                </CardHeader>
                <CardContent className="p-0">
                  <ul className="text-sm text-blue-800 space-y-2">
                    <li className="flex items-center space-x-2">
                      <FileText className="w-4 h-4 text-blue-600" />
                      <span>–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—ò–∞ –∑–∞ –∫–æ—Ä–∏—Å–Ω–∏–∫–µ</span>
                    </li>
                    <li className="flex items-center space-x-2">
                      <Mail className="w-4 h-4 text-blue-600" />
                      <span>–ï–º–∞–∏–ª –ø–æ–¥—Ä—à–∫–∞ 24/7</span>
                    </li>
                    <li className="flex items-center space-x-2">
                      <Users className="w-4 h-4 text-blue-600" />
                      <span>–ó–∞—ò–µ–¥–Ω–∏—Ü–∞ –∫–æ—Ä–∏—Å–Ω–∏–∫–∞</span>
                    </li>
                    <li className="flex items-center space-x-2">
                      <Database className="w-4 h-4 text-blue-600" />
                      <span>–†–µ–¥–æ–≤–∞–Ω –±–µ–∫–∞–ø –∏ –∞–∂—É—Ä–∏—Ä–∞—ö–∞</span>
                    </li>
                  </ul>
                </CardContent>
              </Card>
            </div>

            <div className="space-y-4">
              <Button 
                size="lg"
                onClick={() => window.location.href = '/dashboard'}
                className="h-14 px-8 text-lg bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700"
              >
                <Shield className="mr-3 h-6 w-6" />
                –ò–¥–∏—Ç–µ —É –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª
              </Button>
              
              <Button 
                variant="outline"
                size="lg"
                onClick={() => window.open('/', '_blank')}
                className="h-14 px-8 text-lg ml-4"
              >
                <Eye className="mr-3 h-6 w-6" />
                –ü–æ–≥–ª–µ–¥–∞—ò—Ç–µ —Å–∞—ò—Ç
              </Button>
            </div>

            <div className="bg-gradient-to-r from-green-50 to-emerald-50 rounded-2xl p-6 border border-green-100">
              <div className="flex items-center justify-center space-x-2 mb-3">
                <Star className="h-5 w-5 text-green-600" />
                <span className="text-sm font-medium text-green-800">–•–≤–∞–ª–∞ –≤–∞–º!</span>
              </div>
              <p className="text-green-700 text-sm">
                –•–≤–∞–ª–∞ —à—Ç–æ —Å—Ç–µ –∏–∑–∞–±—Ä–∞–ª–∏ CodilioCMS. –í–∞—à —Ñ–∏–¥–±–µ–∫ –Ω–∞–º –ø–æ–º–∞–∂–µ –¥–∞ –ø–æ–±–æ—ô—à–∞–≤–∞–º–æ —Å–∏—Å—Ç–µ–º. 
                –£–∫–æ–ª–∏–∫–æ –∏–º–∞—Ç–µ –ø–∏—Ç–∞—ö–∞, —Å–ª–æ–±–æ–¥–Ω–æ –Ω–∞—Å –∫–æ–Ω—Ç–∞–∫—Ç–∏—Ä–∞—ò—Ç–µ.
              </p>
            </div>
          </div>
        );

      default:
        return null;
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 flex items-center justify-center p-4 relative overflow-hidden">
      {/* Background decorations */}
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-violet-400 to-purple-600 rounded-full opacity-10 animate-pulse"></div>
        <div className="absolute -bottom-40 -left-40 w-80 h-80 bg-gradient-to-br from-blue-400 to-cyan-600 rounded-full opacity-10 animate-pulse delay-1000"></div>
        <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-gradient-to-br from-emerald-400 to-teal-600 rounded-full opacity-5 animate-spin" style={{ animationDuration: '20s' }}></div>
      </div>

      <div className="w-full max-w-6xl relative">
        {/* Progress Bar */}
        <div className="mb-8">
          <div className="flex items-center justify-between mb-6">
            {STEPS.map((step, index) => (
              <div key={step.id} className="flex flex-col items-center relative">
                {getStepIcon(index)}
                <div className="mt-3 text-center">
                  <h3 className={`text-sm font-medium transition-colors ${
                    index === currentStep 
                      ? 'text-gray-900' 
                      : completedSteps.includes(index)
                        ? 'text-green-600'
                        : 'text-gray-400'
                  }`}>
                    {step.title}
                  </h3>
                  <p className={`text-xs mt-1 transition-colors ${
                    index === currentStep ? 'text-gray-600' : 'text-gray-400'
                  }`}>
                    {step.subtitle}
                  </p>
                </div>
              </div>
            ))}
          </div>
          
          {/* Progress percentage */}
          <div className="w-full bg-gray-200 rounded-full h-2 mb-4">
            <div 
              className="bg-gradient-to-r from-violet-500 to-purple-600 h-2 rounded-full transition-all duration-500 ease-out"
              style={{ width: `${(currentStep / (STEPS.length - 1)) * 100}%` }}
            />
          </div>
          
          <div className="text-center">
            <p className="text-sm text-gray-600">
              –ö–æ—Ä–∞–∫ {currentStep + 1} –æ–¥ {STEPS.length} ‚Ä¢ {Math.round((currentStep / (STEPS.length - 1)) * 100)}% –∑–∞–≤—Ä—à–µ–Ω–æ
            </p>
          </div>
        </div>

        {/* Main Card */}
        <Card className="shadow-2xl border-0 bg-white/80 backdrop-blur-sm">
          <CardHeader className="text-center pb-8 relative overflow-hidden">
            <div className={`absolute inset-0 bg-gradient-to-r ${currentStepData.color} opacity-5`}></div>
            <div className="relative">
              <CardTitle className="text-2xl font-bold text-gray-900 mb-2">
                {currentStepData.title}
              </CardTitle>
              <CardDescription className="text-gray-600 text-lg">
                {currentStepData.description}
              </CardDescription>
            </div>
          </CardHeader>
          
          <CardContent className="px-8 pb-8">
            <form onSubmit={handleSubmit(onSubmit)}>
              <div className="min-h-[500px]">
                {renderStepContent()}
              </div>

              {/* Navigation Buttons */}
              {currentStep < 7 && (
                <div className="flex justify-between mt-12 pt-8 border-t border-gray-100">
                  <Button
                    type="button"
                    variant="outline"
                    onClick={prevStep}
                    disabled={currentStep === 0}
                    className="h-12 px-6"
                  >
                    <ArrowLeft className="mr-2 h-5 w-5" />
                    –ù–∞–∑–∞–¥
                  </Button>

                  {currentStep === 6 ? (
                    <Button 
                      type="button"
                      onClick={handleSubmit(onSubmit)}
                      disabled={isSubmitting}
                      className={`h-12 px-8 bg-gradient-to-r ${currentStepData.color} hover:opacity-90 transition-all`}
                    >
                      {isSubmitting ? (
                        <>
                          <Loader2 className="mr-2 h-5 w-5 animate-spin" />
                          –ó–∞–≤—Ä—à–∞–≤–∞–º —Å–µ—Ç–∞–ø...
                        </>
                      ) : (
                        <>
                          <Rocket className="mr-2 h-5 w-5" />
                          –ó–∞–≤—Ä—à–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—ò—É
                        </>
                      )}
                    </Button>
                  ) : (
                    <Button 
                      type="button" 
                      onClick={(e) => {
                        e.preventDefault();
                        console.log('üñ±Ô∏è –î–∞—ô–µ button clicked');
                        nextStep();
                      }}
                      className={`h-12 px-6 bg-gradient-to-r ${currentStepData.color} hover:opacity-90 transition-all`}
                    >
                      –î–∞—ô–µ
                      <ArrowRight className="ml-2 h-5 w-5" />
                    </Button>
                  )}
                </div>
              )}
            </form>
          </CardContent>
        </Card>

        {/* Footer */}
        <div className="mt-8 text-center">
          <p className="text-sm text-gray-500">
            CodilioCMS &copy; 2025 - –ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–Ω–∏ CMS –∑–∞ –ª–æ–∫–∞–ª–Ω–µ –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏—ò–µ
          </p>
        </div>
      </div>
    </div>
  );
}